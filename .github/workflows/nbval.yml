name: nbval

on:
  workflow_dispatch:
  pull_request:
    branches:
    - 'main'
    paths:
    - 'notebooks/**.ipynb'
    - 'notebooks/**.py'
    - 'requirements.txt'
    - '.ci/*'
    - '.github/workflows/nbval.yml'
  schedule:
    - cron:  '30 8 * * *'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest]
        python: [3.6, 3.7, 3.8]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
  
    - name: Create venv
      run: python -m venv openvino_env
      if: ${{ matrix.os != 'windows-latest' }}
    - name: Install dependencies and check environment
      run: |
        openvino_env/bin/python -m pip install --upgrade pip
        openvino_env/bin/python -m pip install -r .ci/dev-requirements.txt
        openvino_env/bin/python -m ipykernel install --user --name openvino_env
        openvino_env/bin/python -m pip freeze > pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}.txt
        openvino_env/bin/python -m pip check
        openvino_env/bin/python check_install.py
    - name: Archive pip freeze
      uses: actions/upload-artifact@v2
      with:
        name: pip-freeze
        path: pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}.txt
    - name: Check READMEs
      run: |
        python -m pytest .ci/test_notebooks.py
    - name: Check install
      run: |
        python check_install.py
    - name: Analysing with nbval
      run: |
        openvino_env/bin/jupyter lab notebooks --help
        openvino_env/bin/python -m pytest --nbval . --ignore notebooks/301-tensorflow-training-openvino
